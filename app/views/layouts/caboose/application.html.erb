<% if @page && @page.title != 'Access Denied' %>
<% content_for :js do %>
<%= javascript_include_tag "caboose/application" %>
<%= javascript_include_tag @site.name == 'application' ? 'application' : "#{@site.name}/js/application" %>
<script>window.loggedIn = <%= logged_in?.to_json %></script>
<% Caboose::javascripts.each do |js| %><%= javascript_include_tag(js) %><% end %>
<% @page.linked_resources_map[:js].each do |r| %><%= javascript_include_tag r %><% end %>
<% if @page.custom_js && @page.custom_js.strip.length > 0 %><script type='text/javascript'><%= raw @page.custom_js %></script><% end %>
<%= yield :caboose_js %>
<% end %>  
<% content_for :css do %>
<%= stylesheet_link_tag 'caboose/application' %>
<%= stylesheet_link_tag @site.name == 'application' ? 'application' : "#{@site.name}/css/application" %>
<% Caboose::stylesheets.each do |css| %><%= stylesheet_link_tag(css) %><% end %>
<% @page.linked_resources_map[:css].each do |r| %><%= stylesheet_link_tag r %><% end %>
<% if @page.custom_css && @page.custom_css.strip.length > 0 %><style><%= raw @page.custom_css %></style><% end %>
<%= yield :caboose_css %>
<% end %>
  <%  
  b = @page.block  
  if b.nil?
    bt = Caboose::BlockType.where(:name => 'layout_basic').first
    Caboose::Block.create(:page_id => @page.id, :block_type_id => bt.id)    
    b = @page.block
    b.create_children
  end
  #b.log_helper
  options = {    
    :page => @page,
    :view => self,
    :controller_view_content => yield,
    :modal => false,
    :empty_text => defined?(@editing) && @editing ? (defined?(@empty_text) ? @empty_text : 'Empty, click to edit') : "",
    :editing => defined?(@editing) ? @editing : false,
    :css => '|CABOOSE_CSS|',
    :js => '|CABOOSE_JAVASCRIPT|',
    :csrf_meta_tags => '|CABOOSE_CSRF|',
    :csrf_meta_tags2 => '|CABOOSE_CSRF|',
    :logged_in_user => @logged_in_user,
    :site => @site
  }
    
  str = nil    
  if @use_page_cache
    pc = Caboose::PageCache.where(:page_id => @page.id).first  
    if pc # If the page is cached, send it to the user    
           
      require_dependency "#{Caboose.root}/app/models/caboose/block_cache.rb"
      require_dependency "#{Caboose.root}/app/models/caboose/block_cache_file.rb"
      require_dependency "#{Caboose.root}/app/models/caboose/block_cache_image.rb"
    
      @block = Marshal.load(pc.block)    
      @view                    = options[:view                    ]
      @controller_view_content = options[:controller_view_content ]
      @modal                   = options[:modal                   ]
      @empty_text              = options[:empty_text              ]
      @editing                 = options[:editing                 ]
      @css                     = options[:css                     ]
      @js                      = options[:js                      ]
      @csrf_meta_tags          = options[:csrf_meta_tags          ]
      @csrf_meta_tags2         = options[:csrf_meta_tags2         ]
      
      str = render(:inline => pc.render_function)            
    end
  end
  
  # Render the blocks if we don't have it cached    
  str = b.render(b, options) if str.nil?
        
  protocol = request.protocol
  css = yield(:css)
  css.gsub!("<link href=\"//", "<link href=\"#{protocol}")
  css.gsub!("<link href='//" , "<link href='#{protocol}")
  
  str.gsub!('|CABOOSE_CSS|'        , css)
  str.gsub!('|CABOOSE_PROTOCOL|'   , protocol)  
  str.gsub!('|CABOOSE_JAVASCRIPT|' , yield(:js))  
  str.gsub!('|CABOOSE_CSRF|'       , csrf_meta_tags)  
  
  %><%= raw str %><%

end
%>
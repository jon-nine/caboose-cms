<%
bt = @block_type
%>
<div id='crumbtrail'>
  <a href='/admin'>Admin</a> >
  <a href='/admin/block-types'>Block Types</a>
</div>

<h1>Edit Block Type</h1>

<p><div id='blocktype_<%= bt.id %>_name'                            ></div></p>
<p><div id='blocktype_<%= bt.id %>_description'                     ></div></p>

<h2>Children</h2>
<div id='block_types'></div>

<h2>Advanced</h2>
<p><div id='blocktype_<%= bt.id %>_site_id'                         ></div></p>
<p><div id='blocktype_<%= bt.id %>_parent_id'                       ></div></p>
<p><div id='blocktype_<%= bt.id %>_block_type_category_id'          ></div></p>
<p><div id='blocktype_<%= bt.id %>_field_type'                      ></div></p>
<p><div id='blocktype_<%= bt.id %>_default'                         ></div></p>
<p><div id='blocktype_<%= bt.id %>_width'                           ></div></p>
<p><div id='blocktype_<%= bt.id %>_height'                          ></div></p>
<p><div id='blocktype_<%= bt.id %>_fixed_placeholder'               ></div></p>
<p><div id='blocktype_<%= bt.id %>_options_url'                     ></div></p>
<p><div id='blocktype_<%= bt.id %>_options'                         ></div></p>
<p><div id='blocktype_<%= bt.id %>_is_global'                       ></div></p>
<p><div id='blocktype_<%= bt.id %>_use_render_function'             ></div></p>
<p><div id='blocktype_<%= bt.id %>_use_render_function_for_layout'  ></div></p>
<p><div id='blocktype_<%= bt.id %>_allow_child_blocks'              ></div></p>
<p><div id='blocktype_<%= bt.id %>_default_child_block_type_id'     ></div></p>
<p><div id='blocktype_<%= bt.id %>_default_constrain'               ></div></p>
<p><div id='blocktype_<%= bt.id %>_render_function'                 ></div></p>
<p><div id='blocktype_<%= bt.id %>_options_function'                ></div></p>

<div id='message'></div>
<p>
<input type='button' value='< Back' onclick="window.location='/admin/block-types<%= bt.parent_id && bt.parent_id > 0 ? "/#{bt.parent_id}" : '' %>';" />
<input type='button' value='Edit Icon' onclick="caboose_modal_url('/admin/block-types/<%= @block_type.id %>/icon');" />
<input type='button' value='Delete Block Type' onclick="delete_block_type(<%= @block_type.id %>);" />
</p>
<br />

<% content_for :caboose_css do %>
<%= stylesheet_link_tag 'caboose/icomoon_fonts' %>
<style type='text/css'>
#blocktype_<%= bt.id %>_render_function  { font-family: Courier; font-size: 80%; width: 100%; }
#blocktype_<%= bt.id %>_options_function { font-family: Courier; font-size: 80%; width: 100%; }
</style>
<% end %>
<% content_for :caboose_js do %>
<%= javascript_include_tag "caboose/model/all" %>
<script type="text/javascript">

function delete_block_type(block_type_id, confirm)
{
  if (!confirm)
  {
    var p = $('<p/>').addClass('note warning')
      .append('Are you sure you want to delete the block type? ')
      .append($('<input/>').attr('type', 'button').val('Yes').click(function() { delete_block_type(block_type_id, true); })).append(" ")
      .append($('<input/>').attr('type', 'button').val('No' ).click(function() { $('#message').empty(); }));
    $('#message').empty().append(p);
    return;
  }
  $('#message').empty().append($('<p/>').addClass('loading').html('Deleting block type...'));
  $.ajax({
    url: '/admin/block-types/' + block_type_id,
    type: 'delete',
    success: function(resp) {
      if (resp.error) $('#message').empty().append($('<p/>').addClass('note error').html(resp.error));
      if (resp.redirect) window.location = resp.redirect;
    }
  });
}

$(document).ready(function() {
  
  var table = new IndexTable({    
    form_authenticity_token: '<%= form_authenticity_token %>',
    container: 'block_types',
    base_url: '/admin/block-types',
    refresh_url: '/admin/block-types/json?parent_id=<%= @block_type.id %>',
    add_url: '/admin/block-types?parent_id=<%= @block_type.id %>',
    allow_bulk_edit: false,
    allow_bulk_delete: false,
    allow_duplicate: false,    
    fields: [                      
      { name: 'parent_id'                      , sort: 'parent_id'                      , show: false , bulk_edit: false, nice_name: 'Parent'                         , type: 'select'            , value: function(bt) { return bt.parent_id;                       }, width: 400, options_url: '/admin/block-types/tree-options' },
      { name: 'name'                           , sort: 'name'                           , show: true  , bulk_edit: false, nice_name: 'Name'                           , type: 'text'              , value: function(bt) { return bt.name;                            }, width: 400 },
      { name: 'description'                    , sort: 'description'                    , show: true  , bulk_edit: false, nice_name: 'Description'                    , type: 'text'              , value: function(bt) { return bt.description;                     }, width: 400 },
      { name: 'field_type'                     , sort: 'field_type'                     , show: true  , bulk_edit: false, nice_name: 'Field type'                     , type: 'select'            , value: function(bt) { return bt.field_type;                      }, width: 400, options_url: '/admin/block-types/field-type-options' },      
      { name: 'block_type_category_id'         , sort: 'block_type_category_id'         , show: false , bulk_edit: false, nice_name: 'Category'                       , type: 'select'            , value: function(bt) { return bt.block_type_category_id;          }, width: 400, options_url: '/admin/block-type-categories/tree-options' },
      { name: 'is_global'                      , sort: 'is_global'                      , show: false , bulk_edit: false, nice_name: 'Global'                         , type: 'checkbox'          , value: function(bt) { return bt.is_global;                       }, text: function(bt) { return bt.is_global                      ? 'Yes' : 'No' }, width: 400 },
      { name: 'use_render_function'            , sort: 'use_render_function'            , show: true  , bulk_edit: false, nice_name: 'Use Render Function'            , type: 'checkbox'          , value: function(bt) { return bt.use_render_function;             }, text: function(bt) { return bt.use_render_function            ? 'Yes' : 'No' }, width: 400 },
      { name: 'use_render_function_for_layout' , sort: 'use_render_function_for_layout' , show: true  , bulk_edit: false, nice_name: 'Use Render Function for Layout' , type: 'checkbox'          , value: function(bt) { return bt.use_render_function_for_layout;  }, text: function(bt) { return bt.use_render_function_for_layout ? 'Yes' : 'No' }, width: 400 },
      { name: 'allow_child_blocks'             , sort: 'allow_child_blocks'             , show: true  , bulk_edit: false, nice_name: 'Allow Child Blocks'             , type: 'checkbox'          , value: function(bt) { return bt.allow_child_blocks;              }, text: function(bt) { return bt.allow_child_blocks             ? 'Yes' : 'No' }, width: 400 },
      { name: 'default_child_block_type_id'    , sort: 'default_child_block_type_id'    , show: false , bulk_edit: false, nice_name: 'Default Child Block Type'       , type: 'select'            , value: function(bt) { return bt.default_child_block_type_id;     }, width: 400, options_url: '/admin/block-types/options' },
      { name: 'render_function'                , sort: 'render_function'                , show: false , bulk_edit: false, nice_name: 'Render Function'                , type: 'textarea'          , value: function(bt) { return bt.render_function;                 }, width: 800, height: 200 },            
      { name: 'default'                        , sort: 'default'                        , show: false , bulk_edit: false, nice_name: 'Default value'                  , type: 'text'              , value: function(bt) { return bt.default;                         }, width: 400 },
      { name: 'width'                          , sort: 'width'                          , show: false , bulk_edit: false, nice_name: 'Width'                          , type: 'text'              , value: function(bt) { return bt.width;                           }, width: 400 },
      { name: 'height'                         , sort: 'height'                         , show: false , bulk_edit: false, nice_name: 'Height'                         , type: 'text'              , value: function(bt) { return bt.height;                          }, width: 400 },
      { name: 'fixed_placeholder'              , sort: 'fixed_placeholder'              , show: false , bulk_edit: false, nice_name: 'Fixed placeholder'              , type: 'checkbox'          , value: function(bt) { return bt.fixed_placeholder;               }, text: function(bt) { return bt.fixed_placeholder ? 'Yes' : 'No' }, width: 400 },
      { name: 'default_constrain'              , sort: 'default_constrain'              , show: false , bulk_edit: false, nice_name: 'Constrain by Default'           , type: 'checkbox'          , value: function(bt) { return bt.default_constrain;               }, text: function(bt) { return bt.default_constrain ? 'Yes' : 'No' }, width: 400 },
      { name: 'options_url'                    , sort: 'options_url'                    , show: false , bulk_edit: false, nice_name: 'Options URL'                    , type: 'text'              , value: function(bt) { return bt.options_url;                     }, width: 400 },
      { name: 'options_function'               , sort: 'options_function'               , show: false , bulk_edit: false, nice_name: 'Options Function'               , type: 'textarea'          , value: function(bt) { return bt.options_function;                }, width: 400, height: 100 },
      { name: 'options'                        , sort: 'options'                        , show: false , bulk_edit: false, nice_name: 'Options'                        , type: 'textarea'          , value: function(bt) { return bt.options;                         }, width: 400, height: 100 }            
    ],
    new_model_text: 'New Child Block',
    new_model_fields: [
      { name: 'name', nice_name: 'Name', type: 'text', width: 400 }                      
    ],    
  });
    
  m = new ModelBinder({
    name: 'BlockType',
    id: <%= @block_type.id %>,
    update_url: '/admin/block-types/<%= @block_type.id %>',
    authenticity_token: '<%= form_authenticity_token %>',    
    attributes: [      
      { name: 'parent_id'                      , nice_name: 'Parent'                         , type: 'select'   , value: <%= raw Caboose.json(bt.parent_id)                       %>, width: 400, options_url: '/admin/block-types/tree-options' },
      { name: 'name'                           , nice_name: 'Name'                           , type: 'text'     , value: <%= raw Caboose.json(bt.name)                            %>, width: 400 },
      { name: 'description'                    , nice_name: 'Description'                    , type: 'text'     , value: <%= raw Caboose.json(bt.description)                     %>, width: 400 },
      { name: 'block_type_category_id'         , nice_name: 'Category'                       , type: 'select'   , value: <%= raw Caboose.json(bt.block_type_category_id)          %>, width: 400, options_url: '/admin/block-type-categories/tree-options' },
      { name: 'is_global'                      , nice_name: 'Global'                         , type: 'checkbox' , value: <%= bt.is_global                      ? 'true' : 'false' %>, width: 400 },
      { name: 'use_render_function'            , nice_name: 'Use Render Function'            , type: 'checkbox' , value: <%= bt.use_render_function            ? 'true' : 'false' %>, width: 400 },
      { name: 'use_render_function_for_layout' , nice_name: 'Use Render Function for Layout' , type: 'checkbox' , value: <%= bt.use_render_function_for_layout ? 'true' : 'false' %>, width: 400 },
      { name: 'allow_child_blocks'             , nice_name: 'Allow Child Blocks'             , type: 'checkbox' , value: <%= bt.allow_child_blocks             ? 'true' : 'false' %>, width: 400 },
      { name: 'default_child_block_type_id'    , nice_name: 'Default Child Block Type'       , type: 'select'   , value: <%= raw Caboose.json(bt.default_child_block_type_id)     %>, text: <%= raw Caboose.json(bt.default_child_block_type) %>, width: 400, options_url: '/admin/block-types/options' },
      { name: 'render_function'                , nice_name: 'Render Function'                , type: 'textarea' , value: <%= raw Caboose.json(bt.render_function)                 %>, width: 800, height: 200 },      
      { name: 'field_type'                     , nice_name: 'Field type'                     , type: 'select'   , value: <%= raw Caboose.json(bt.field_type)                      %>, text: <%= raw Caboose.json(bt.field_type) %>, width: 400, options_url: '/admin/block-types/field-type-options' },
      { name: 'default'                        , nice_name: 'Default value'                  , type: 'text'     , value: <%= raw Caboose.json(bt.default)                         %>, width: 400 },
      { name: 'width'                          , nice_name: 'Width'                          , type: 'text'     , value: <%= raw Caboose.json(bt.width)                           %>, width: 400 },
      { name: 'height'                         , nice_name: 'Height'                         , type: 'text'     , value: <%= raw Caboose.json(bt.height)                          %>, width: 400 },
      { name: 'fixed_placeholder'              , nice_name: 'Fixed placeholder'              , type: 'checkbox' , value: <%= raw Caboose.json(bt.fixed_placeholder)               %>, width: 400 },
      { name: 'options_url'                    , nice_name: 'Options URL'                    , type: 'text'     , value: <%= raw Caboose.json(bt.options_url)                     %>, width: 400 },
      { name: 'options_function'               , nice_name: 'Options Function'               , type: 'textarea' , value: <%= raw Caboose.json(bt.options_function)                %>, width: 400, height: 100 },
      { name: 'options'                        , nice_name: 'Options'                        , type: 'textarea' , value: <%= raw Caboose.json(bt.options)                         %>, width: 400, height: 100 }      
    ]
  });
});

</script>
<% end %>

<%
p = @product
v = @variant

error_message = nil
if @highlight_variant_id # Make sure we're not trying to highlight a deleted variant
  v = Caboose::Variant.where(:id => @highlight_variant_id).first
  if v.nil?
    error_message = "<p class='note error'>The variant you want to highlight is not in the database.</p>"
  elsif v.status == 'Deleted'
    error_message = "<p class='note error'>The variant you want to highlight has been deleted.</p>"
  end
end

%>

<%= render :partial => 'caboose/products/admin_header' %>

<div id='variants'></div>
<div id='message'><%= error_message %></div>

<!--
<p><input type='button' value='New Variant' onclick="add_variant(<%= p.id %>);" /></p>
<form id="add-multiple" action="/admin/products/<%= @product.id %>/variants/add-multiple" method="post">
  <p style="margin: 0 0 12px"><small>CSV format: Alternate ID, Quantity, Price<%= ', ' if @product.option1 || @product.option2 || @product.option3 %><%= [@product.option1, @product.option2, @product.option3].compact.join(', ') %></small></p>
  <textarea id="variants_csv" name="variants_csv" rows="8" cols="12" style="min-width: 500px; min-height: 250px; margin: 0 0 16px; padding: 12px"></textarea><br />
  <input type="submit" value="Submit" />
  <p class="message" style="margin: 12px 0 0; color: red"></p>
</form>
-->

<%= render :partial => 'caboose/products/admin_footer' %>

<% content_for :caboose_css do %>
<style type='text/css'>
tr.highlight td { background: #ffffcc !important; }
td.sort_handle { background: #ccc; width: 20px; }

ul {
      list-style-type: square;
      padding: 0 0 0 24px;
      margin: 12px 0 24px;
    }
</style>
<% end %>

<% content_for :caboose_js do %>
<script type='text/javascript'>

<%
fields = ['Alternate ID', 'Quantity In Stock', 'Price']
fields << p.option1 if p.option1
fields << p.option2 if p.option2
fields << p.option3 if p.option3
sc = @site.store_config
%>

$(document).ready(function() {
  var that = this;
  
  // add_to_crumbtrail('/admin', 'Admin');
  // add_to_crumbtrail('/admin/products', 'Products');  
  // add_to_crumbtrail('/admin/products/<%= p.id %>', <%= raw Caboose.json(p.title) %>);
  // add_to_crumbtrail('/admin/products/<%= p.id %>/variants', 'Inventory & Variants');
  
  var table = new IndexTable({    
    form_authenticity_token: '<%= form_authenticity_token %>',
    container: 'variants',
    base_url: '/admin/products/<%= p.id %>/variants',
    allow_bulk_edit: true,
    allow_bulk_delete: true,
    allow_duplicate: false,
    allow_advanced_edit: true,
    fields: [
      <% if p.option1 %>{ show: true , name: 'option1'             , nice_name: <%= raw Caboose.json(p.option1) %>            , sort: 'option1'                       , type: 'text'       , value: function(v) { return v.option1                     }, width: 75, align: 'left'   , bulk_edit: true },<% end %>                        
      <% if p.option2 %>{ show: true , name: 'option2'             , nice_name: <%= raw Caboose.json(p.option2) %>            , sort: 'option2'                       , type: 'text'       , value: function(v) { return v.option2                     }, width: 75, align: 'left'   , bulk_edit: true },<% end %>      
      <% if p.option3 %>{ show: true , name: 'option3'             , nice_name: <%= raw Caboose.json(p.option3) %>            , sort: 'option3'                       , type: 'text'       , value: function(v) { return v.option3                     }, width: 75, align: 'left'   , bulk_edit: true },<% end %>                                 
      { show: true  , name: 'status'                               , nice_name: 'Status'                                      , sort: 'status'                        , type: 'select'       , options_url: '/admin/variants/status-options', value: function(v) { return v.status  }, width: 75, align: 'left'   , bulk_edit: true },
      { show: true  , name: 'alternate_id'                         , nice_name: 'Alternate ID'                                , sort: 'alternate_id'                  , type: 'text'       , value: function(v) { return v.alternate_id                }, width: 75, align: 'left'   , bulk_edit: true },
      { show: true  , name: 'sku'                                  , nice_name: 'SKU'                                         , sort: 'sku'                           , type: 'text'       , value: function(v) { return v.sku                         }, width: 75, align: 'left'   , bulk_edit: true },                         
      { show: false , name: 'barcode'                              , nice_name: 'Barcode'                                     , sort: 'barcode'                       , type: 'text'       , value: function(v) { return v.barcode                     }, width: 75, align: 'left'   , bulk_edit: true },
      { show: true  , name: 'cost'                                 , nice_name: 'Cost of Goods'                               , sort: 'cost'                          , type: 'text'       , value: function(v) { return v.cost                        }, width: 75, align: 'right'  , bulk_edit: true },
      { show: true  , name: 'price'                                , nice_name: 'Price'                                       , sort: 'price'                         , type: 'text'       , value: function(v) { return v.price                       }, width: 75, align: 'right'  , bulk_edit: true },
      { show: true  , name: 'sale_price'                           , nice_name: 'Sale price'                                  , sort: 'sale_price'                    , type: 'text'       , value: function(v) { return v.sale_price                  }, width: 75, align: 'right'  , bulk_edit: true },
      { show: false , name: 'date_sale_starts'                     , nice_name: 'Sale starts'                                 , sort: 'date_sale_starts'              , type: 'datetime'   , value: function(v) { return v.date_sale_starts            }, width: 75, align: 'left'   , bulk_edit: true },      
      { show: false , name: 'date_sale_ends'                       , nice_name: 'Sale ends'                                   , sort: 'date_sale_ends'                , type: 'datetime'   , value: function(v) { return v.date_sale_ends              }, width: 75, align: 'left'   , bulk_edit: true },
      { show: false , name: 'clearance'                            , nice_name: 'On Clearance'                                , sort: 'clearance'                     , type: 'checkbox'   , value: function(v) { return v.clearance                   }, text: function(v) { return v.clearance         ? 'Yes' : 'No' }, width: 50, align: 'center' , bulk_edit: true },
      { show: true  , name: 'clearance_price'                      , nice_name: 'Clearance price'                             , sort: 'clearance_price'               , type: 'text'       , value: function(v) { return v.clearance_price             }, width: 75, align: 'right'  , bulk_edit: true },      
      { show: true  , name: 'quantity_in_stock'                    , nice_name: 'Quantity'                                    , sort: 'quantity_in_stock'             , type: 'text'       , value: function(v) { return v.quantity_in_stock           }, width: 50, align: 'right'  , bulk_edit: true }, 
      { show: false , name: 'weight'                               , nice_name: 'Weight (<%= sc.weight_unit %>)'              , sort: 'weight'                        , type: 'text'       , value: function(v) { return v.weight                      }, width: 50, align: 'right'  , bulk_edit: true }, 
      { show: false , name: 'length'                               , nice_name: 'Length (<%= sc.length_unit %>)'              , sort: 'length'                        , type: 'text'       , value: function(v) { return v.length                      }, width: 50, align: 'right'  , bulk_edit: true }, 
      { show: false , name: 'width'                                , nice_name: 'Width (<%= sc.length_unit %>)'               , sort: 'width'                         , type: 'text'       , value: function(v) { return v.width                       }, width: 50, align: 'right'  , bulk_edit: true }, 
      { show: false , name: 'height'                               , nice_name: 'Height (<%= sc.length_unit %>)'              , sort: 'height'                        , type: 'text'       , value: function(v) { return v.height                      }, width: 50, align: 'right'  , bulk_edit: true }, 
      { show: false , name: 'cylinder'                             , nice_name: 'Cylinder'                                    , sort: 'cylinder'                      , type: 'checkbox'   , value: function(v) { return v.cylinder                    }, text: function(v) { return v.cylinder          ? 'Yes' : 'No' }, width: 50, align: 'center' , bulk_edit: true }, 
      { show: false , name: 'requires_shipping'                    , nice_name: 'Requires shipping'                           , sort: 'requires_shipping'             , type: 'checkbox'   , value: function(v) { return v.requires_shipping           }, text: function(v) { return v.requires_shipping ? 'Yes' : 'No' }, width: 50, align: 'center' , bulk_edit: true }, 
      { show: false , name: 'taxable'                              , nice_name: 'Taxable'                                     , sort: 'taxable'                       , type: 'checkbox'   , value: function(v) { return v.taxable                     }, text: function(v) { return v.taxable           ? 'Yes' : 'No' }, width: 50, align: 'center' , bulk_edit: true },      
      { show: false , name: 'allow_backorder'                      , nice_name: 'Allow backorder'                             , sort: 'allow_backorder'               , type: 'checkbox'   , value: function(v) { return v.allow_backorder             }, text: function(v) { return v.allow_backorder   ? 'Yes' : 'No' }, width: 50, align: 'center' , bulk_edit: true },
      { show: false , name: 'downloadable'                         , nice_name: 'Downloadable'                                , sort: 'downloadable'                  , type: 'checkbox'   , value: function(v) { return v.downloadable                }, text: function(v) { return v.downloadable      ? 'Yes' : 'No' }, width: 50, align: 'center' , bulk_edit: true },
      { show: false , name: 'download_path'                        , nice_name: 'Download path'                               , sort: 'download_path'                 , type: 'text'       , value: function(v) { return v.download_path               }, width: 50, align: 'left'   , bulk_edit: true },
      { show: false , name: 'flat_rate_shipping'                   , nice_name: 'Flat rate shipping'                          , sort: 'flat_rate_shipping'            , type: 'checkbox'   , value: function(v) { return v.flat_rate_shipping          }, text: function(v) { return v.flat_rate_shipping ? 'Yes' : 'No' }, width: 50, align: 'center' , bulk_edit: true },      
      { show: false , name: 'flat_rate_shipping_single'            , nice_name: 'Amount (single)'                             , sort: 'flat_rate_shipping_single'     , type: 'text'       , value: function(v) { return v.flat_rate_shipping_single   }, width: 50, align: 'right'  , bulk_edit: true },
      { show: false , name: 'flat_rate_shipping_combined'          , nice_name: 'Amount (combined)'                           , sort: 'flat_rate_shipping_combined'   , type: 'text'       , value: function(v) { return v.flat_rate_shipping_combined }, width: 50, align: 'right'  , bulk_edit: true },            
      { show: false , name: 'flat_rate_shipping_package_method_id' , nice_name: 'Package and method'                          , sort: 'flat_rate_shipping_package_id' , type: 'select'     ,  
        value: function(v) { return v.flat_rate_shipping_package_id + '_' + v.flat_rate_shipping_method_id },
        text: function(v) { return v.flat_rate_shipping_package && v.flat_rate_shipping_method ? v.flat_rate_shipping_package.name + ' - ' + v.flat_rate_shipping_method.service_name : '' },        
        width: 150, 
        align: 'right'  , 
        bulk_edit: true , 
        options_url: '/admin/shipping-packages/package-method-options' 
      }
    ],
    <% if @highlight_variant_id %>highlight_id: <%= @highlight_variant_id %>,<% end %>
    new_model_text: 'New Variant',
    new_model_fields: [
      { name: 'alternate_id'      , nice_name: 'Alternate ID'  , type: 'text', width: 400 },
      { name: 'quantity_in_stock' , nice_name: 'Quantity'      , type: 'text', width: 400 },
      { name: 'cost'              , nice_name: 'Cost of Goods' , type: 'text', width: 400 },
      { name: 'price'             , nice_name: 'Price'         , type: 'text', width: 400 },
      <% if p.option1 %>{ name: 'option1', nice_name: <%= raw Caboose.json(p.option1) %>, type: 'text', width: 400 },<% end %>
      <% if p.option2 %>{ name: 'option2', nice_name: <%= raw Caboose.json(p.option2) %>, type: 'text', width: 400 },<% end %>
      <% if p.option3 %>{ name: 'option3', nice_name: <%= raw Caboose.json(p.option3) %>, type: 'text', width: 400 },<% end %>      
    ],
    bulk_import_fields: <%= raw Caboose.json(fields) %>,
    bulk_import_url: '/admin/products/<%= p.id %>/variants/bulk'
  });        
});

</script>
<% end %>
